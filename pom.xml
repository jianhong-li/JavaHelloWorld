<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!--<parent>
    <groupId>com.cityminsu.common</groupId>
    <artifactId>cityminsu-supom-nexus</artifactId>
    <version>0.0.28</version>
  </parent>
-->
  <groupId>com.jianhongl.fresh</groupId>
  <artifactId>JavaHelloWorld</artifactId>
  <version>1.0.0</version>

  <packaging>pom</packaging>

  <name>JavaHelloWorld</name>
  <url>https://firfor.cn</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>


    <maven_compiler_plugin_version>3.2</maven_compiler_plugin_version>
    <java_source_version>1.8</java_source_version>
    <java_target_version>1.8</java_target_version>
    <file_encoding>UTF-8</file_encoding>
    <maven_source_plugin_version>2.4</maven_source_plugin_version>
    <maven_jar_plugin_version>2.5</maven_jar_plugin_version>
    <maven_war_plugin_version>2.5</maven_war_plugin_version>
    <maven_resources_plugin_version>2.6</maven_resources_plugin_version>
    <maven_install_plugin_version>2.5.2</maven_install_plugin_version>
    <maven_deploy_plugin_version>2.8.2</maven_deploy_plugin_version>
    <maven_surefire_plugin_version>2.8</maven_surefire_plugin_version>
    <maven_clean_plugin_version>2.4.1</maven_clean_plugin_version>
    <maven_javadoc_plugin_version>2.7</maven_javadoc_plugin_version>
    <maven_os_maven_plugin_version>1.6.1</maven_os_maven_plugin_version>
    <checkDeployRelease_skip>false</checkDeployRelease_skip>
    <maven_deploy_skip>false</maven_deploy_skip>
    <skipTests>false</skipTests><!-- rename the config name to be the same with maven parameter -->


<!--    &lt;!&ndash; 定义为变量,便于引用与覆盖 &ndash;&gt;-->
<!--    <cityminsu.nexus.releases>https://mvn.firfor.cn/nexus/content/repositories/releases</cityminsu.nexus.releases>-->
<!--    <cityminsu.nexus.snapshots>https://mvn.firfor.cn/nexus/content/repositories/snapshots</cityminsu.nexus.snapshots>-->

  </properties>


  <modules>
    <module>demo-thread-status</module>
    <module>demo-io-model</module>
    <module>demo-digester</module>
    <module>demo-async-servlet</module>
    <module>demo-misc</module>
    <module>demo-bash-rest-api-for-java</module>
  </modules>

  <!--
   注: 此Demo工程尽量在子模块间不共享依赖. 这里定义一些最基础的运行环境依赖,同时完全依赖开源环境. 确保代码在所有的环境下都可以编译运行
   -->

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>kr.motd.maven</groupId>
          <artifactId>os-maven-plugin</artifactId>
          <version>${maven_os_maven_plugin_version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven_clean_plugin_version}</version>
        </plugin>


        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven_jar_plugin_version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven_war_plugin_version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven_install_plugin_version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven_deploy_plugin_version}</version>
          <configuration>
            <skip>${maven_deploy_skip}</skip>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven_javadoc_plugin_version}</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <charset>UTF-8</charset>
            <quiet>true</quiet>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven_compiler_plugin_version}</version>
          <configuration>
            <source>${java_source_version}</source>
            <target>${java_target_version}</target>
            <encoding>${file_encoding}</encoding>
            <compilerArgs>
              <arg>-J-Duser.country=US</arg>
              <!--<arg>-verbose</arg>-->
            </compilerArgs>
            <debug>true</debug>
            <fork>true</fork>
          </configuration>
        </plugin>

        <!--https://maven.apache.org/plugins/maven-resources-plugin/examples/binaries-filtering.html-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven_resources_plugin_version}</version>
          <configuration>
            <!-- https://maven.apache.org/plugins/maven-resources-plugin/examples/encoding.html-->
            <encoding>UTF-8</encoding>
            <useDefaultDelimiters>false</useDefaultDelimiters>
            <!-- This means expression ${ } and @ @ preceded will replace by the expression : \${java.home} -> ${java.home}.-->
            <escapeString>\</escapeString>
            <delimiters>
              <delimiter>${*}</delimiter>
            </delimiters>
            <!-- The plugin will prevent binary files filtering without adding some excludes configuration for the following file extensions jpg, jpeg, gif, bmp and png.-->
            <!-- https://maven.apache.org/plugins/maven-resources-plugin/examples/binaries-filtering.html-->
            <!-- https://blog.csdn.net/u014515854/article/details/79486461 -->
            <nonFilteredFileExtensions>
              <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
              <nonFilteredFileExtension>swf</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>

        <plugin>
          <!-- 源码插件 -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven_source_plugin_version}</version>
          <!-- 发布时自动将源码同时发布的配置 -->
          <executions>
            <!-- https://stackoverflow.com/questions/10567551/difference-between-maven-source-plugin-jar-and-jar-no-fork-goal -->
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <attach>true</attach>
          </configuration>
        </plugin>

        <!-- test plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven_surefire_plugin_version}</version>
          <configuration>
            <skipTests>${skipTests}</skipTests>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
      </extension>
    </extensions>
  </build>
</project>
